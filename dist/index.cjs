"use strict";var Oe=Object.create;var G=Object.defineProperty;var be=Object.getOwnPropertyDescriptor;var Te=Object.getOwnPropertyNames;var qe=Object.getPrototypeOf,xe=Object.prototype.hasOwnProperty;var je=(r,e,t,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of Te(e))!xe.call(r,o)&&o!==t&&G(r,o,{get:()=>e[o],enumerable:!(s=be(e,o))||s.enumerable});return r};var $=(r,e,t)=>(t=r!=null?Oe(qe(r)):{},je(e||!r||!r.__esModule?G(t,"default",{value:r,enumerable:!0}):t,r));var f=$(require("fs"),1),he=$(require("js-yaml"),1);var ue=require("moderndash");var a=(r,e,t)=>{if(!r||!e)return t;let o=(Array.isArray(e)?e:e?.match(/([^[.\]])+/g))?.reduce((n,i)=>n&&n[i],r);return o===void 0?t:o},D=(r,e)=>!r||!e?!1:!!e?.match(/([^[.\]])+/g)?.reduce((s,o)=>s&&s[o],r),U=r=>(e,t)=>e[r]>t[r]?1:t[r]>e[r]?-1:0,H=(r,e)=>e.reduce((t,s)=>(r.hasOwnProperty(s)&&(t[s]=r[s]),t),{}),B=(r,e)=>{for(let t in r)if(e(r[t]))return r[t]},J=(r,e="\\s")=>r.replace(new RegExp(`^(.*?)([${e}]*)$`),"$1");var V=r=>Array.isArray(r),d=r=>Object.prototype.toString.call(r)==="[object Object]",z=r=>typeof r=="number",K=r=>!D(r,"$ref"),P=r=>!D(r,"$ref"),q=r=>/^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(r);var R=require("moderndash"),ee=$(require("prettier"),1);var S={INVALID_JSON_FILE_ERROR:`Your json file is invalid, please check it!
`,INVALID_FILE_FORMAT:`Your input file is invalid, please check if it json or yaml!
`,FETCH_CLIENT_FAILED_ERROR:`Fetch client failed! Please check your network or ts-codegen.config.ts file.
`,NO_CLIENTS_OR_DATA:`You should provide at least one client or data file!
`},h={GENERATING:"\u2604\uFE0F Generating...",SUCCESSFUL:`\u{1F973} All request data generated successful!!!
`,LOCAL_SUCCESSFUL:r=>`\u2705  Request data generated successful from file${r+1}!!!
`,READING_FROM_LOCAL:r=>`\u{1F453} Reading swagger schema from local file${r+1}...`,GETTING_FROM_REMOTE:r=>`\u{1F6DC} Getting swagger schema from client ${r+1}...`,REMOTE_SUCCESSFUL:r=>`\u2705  Request data generated successful from client${r+1}!!!
`,MISSING_OPERATION_ID:"\u26A0\uFE0F Some of your request does not have an operation id, generated request method will not has an uniq name!"},Q=["get","post","put","delete","patch","options","head"],_="/",X=`
/* 
    *  this file is generated by @openapi-integration/swr-request-generator.
    *  please do not modify it manually.
    */

  `,Y=r=>`// * No${r+1} Request File Content *
`,l="#EnumTypeSuffix";var N=r=>console.log(`\x1B[32m${r}\x1B[39m`),Z=r=>console.log(`\x1B[33m${r}\x1B[39m`),O=r=>console.log(`\x1B[41m${r}\x1B[49m`);var p=r=>{if(!r)return"";let e=(0,R.camelCase)(r);return`${e.charAt(0).toUpperCase()}${e.slice(1)}`},te=(r=[])=>{let e={};return r.forEach(t=>{e[t]=t}),e},x=r=>ee.default.format(r,{printWidth:120,trailingComma:"all",arrowParens:"always",parser:"typescript"}),j=r=>{if((0,R.isEmpty)(r))return;let e=Object.entries(r).map(([t,s])=>{if(d(s)&&Object.keys(s).length===1&&!(0,R.isEmpty)(B(s,n=>n==="FormData")))return`${L(t)}: FormData`;if(d(s)){let n=JSON.stringify(s).replace(/"integer"/g,'"number"');return`${L(t)}: ${n.replace(/"/g,"")};`}let o=s.replace(l,"").replace(/integer/g,"number");return`${L(t)}: ${o};`});return r&&`{
        ${e.sort().join(`
`)}
      }`},re=r=>{let e=Object.entries(r.body??{}).map(([,n])=>d(n)&&Object.keys(n).length===1&&!(0,R.isEmpty)(B(n,i=>i==="FormData"))?"FormData;":d(n)?`${JSON.stringify(n).replace(/"/g,"")};`:`${n.replace(l,"")};`),t=(0,R.isEmpty)(e)?"":`body: ${e.sort().join(`
`)}`;if(r.query&&Object.keys(r.query).length>0){let n=`query: ${j(r.query)}`;return`{
        ${t}
        ${n}
      }`}let s=Object.entries(r.query||{}).map(([,n])=>d(n)?`${JSON.stringify(n).replace(/"/g,"")};`:`${n.replace(l,"")};`),o=(0,R.isEmpty)(s)?"":`query: ${s.sort().join(`
`)}`;return`{
        ${t}
        ${o}
      }`},L=r=>{let e=r.includes("?"),t=J(r,"?");return`'${q(t)?t:(0,R.camelCase)(p(t))}'${e?"?":""}`},se=(r,e=S.INVALID_JSON_FILE_ERROR,t=O)=>{if(typeof r=="string")try{return JSON.parse(r)}catch{t(e);return}},A=r=>{if(d(r))return JSON.stringify(r).replace(/"/g,"");if(r!=="")return r};var c=class{constructor(e){this.inputs=e}schemaType={};static of(e){return new c(e)}getSchemaType=()=>this.schemaType;resolve=e=>{let{schema:t={},results:s,parentKey:o,key:n}=this.inputs;if(t.$ref)return this.schemaType=this.resolveRef(t.$ref,e||t.type),this.schemaType=this.resolveNullable().getSchemaType(),this;if(t.oneOf||t.anyOf)return this.schemaType=this.resolveOneOfAndAnyOf(t.oneOf||t.anyOf),this.schemaType=this.resolveNullable().getSchemaType(),this;if(t.allOf)return this.schemaType=this.resolveAllOf(t.allOf),this.schemaType=this.resolveNullable().getSchemaType(),this;if(t.items)return this.schemaType=this.resolveItems(t.items,t.type,n,o),this.schemaType=this.resolveNullable().getSchemaType(),this;if(t.enum){let i=this.getEnumName(n,o);return s[i]=t.enum,this.schemaType=i,this.schemaType=this.resolveNullable().getSchemaType(),this}return t.type==="object"?t.properties?(this.schemaType=this.resolveProperties(t.properties,t.required,o),this.schemaType=this.resolveNullable().getSchemaType(),this):t.title?(this.schemaType=t.type,this.schemaType=this.resolveNullable().getSchemaType(),this):(this.schemaType="{[key:string]:any}",this.schemaType=this.resolveNullable().getSchemaType(),this):t.type==="string"&&t.format==="binary"?(this.schemaType="FormData",this.schemaType=this.resolveNullable().getSchemaType(),this):(this.schemaType=this.getBasicType(t.type,this.resolveRef(t.$ref,e||t.type)),this.schemaType=this.resolveNullable().getSchemaType(),this)};resolveNullable=()=>(this.inputs.schema?.nullable&&(this.schemaType=d(this.schemaType)?`${JSON.stringify(this.schemaType)} | null`:`${this.schemaType} | null`),this);getEnumName=(e,t="")=>`${p(t)}${p(e)}${l}`;resolveRef=(e,t)=>{if(!e)return"";let s=p(this.pickTypeByRef(e));return t==="array"?`${s}[]`:s};resolveOneOfAndAnyOf=e=>e.map(t=>{let s=c.of({results:{},schema:t}).resolve(t.type).getSchemaType();return JSON.stringify(s)}).join(" | ").replace(l,"").replace(/"/g,"");resolveAllOf=e=>e.map(t=>{let s=c.of({results:{},schema:t}).resolve(t.type).getSchemaType();return JSON.stringify(s)}).join(" & ").replace(l,"").replace(/"/g,"");getBasicType=(e,t)=>{switch(e){case"integer":return"number";case"array":return this.getTypeForArray(t);case void 0:return t||"";default:return e}};getTypeForArray=e=>e?`${e}[]`:"Array<any>";pickTypeByRef=e=>{if(!e)return;let t=e.split("/");return t[t.length-1]};resolveItems=(e,t,s,o)=>{if(!e)return{};let n=a(e,"items");if(t==="array"){if(n)return`${this.resolveItems(n,e.type,s,o)}[]`;if(!a(e,"$ref"))return`${a(e,"type")}[]`}return V(e)?e.map(i=>c.of({results:this.inputs.results,schema:i,key:s,parentKey:o}).resolve().getSchemaType()):c.of({results:this.inputs.results,schema:e,key:s,parentKey:o}).resolve(t).getSchemaType()};resolveProperties=(e={},t=[],s)=>Object.entries(e).reduce((o,[n,i])=>({...o,[`${n}${t.indexOf(n)>-1?"":"?"}`]:c.of({results:this.inputs.results,schema:i,key:n,parentKey:s}).resolve().getSchemaType()}),{})};var g=require("moderndash");var F=(r,e)=>{if((0,g.isEmpty)(r))return"";let t=r[e],s=t.some(n=>z(n)),o=e.replace(l,"");return s?`export type ${o} = ${t.map(n=>JSON.stringify(n)).join("|")}`:`export enum ${o} ${JSON.stringify(te(t)).replace(/:/gi,"=")}`},M=r=>`use${p((0,g.camelCase)(r||""))}Request`,oe=r=>`useGetRequest<${A(r)}, ResponseError>`,ne=(r,e)=>`useMutationRequest<${e}, AxiosResponse<${A(r)}>, ResponseError>`,ie=(r,e,t="")=>(0,g.isEmpty)(r)&&(0,g.isEmpty)(e)?[void 0,void 0]:[`${p(t)}Request`,{query:e,body:r}],ae=r=>{let e={...r.TReqQuery,...r.TReqPath,...r.THeader},t=(0,g.isEmpty)(e)?void 0:j(e),s=[...r.pathParams??[],...r.queryParams??[],...Object.keys(r.THeader??{})].filter(Boolean).map(n=>q(n)?n:(0,g.camelCase)(n)),o=s.length===0?"":`{${s.join(",")}}:${t}`;return`${o?o+", ":""}SWRConfig?: SWRConfig<${A(r.TResp)}, ResponseError>, axiosConfig?: AxiosRequestConfig`},ce=(r,e)=>{let t={...r.TReqPath,...r.THeader},s=(0,g.isEmpty)(t)?void 0:j(t),o=[...r.pathParams??[],...Object.keys(r.THeader??{})].filter(Boolean).map(i=>q(i)?i:(0,g.camelCase)(i)),n=o.length===0?"":`{${o.join(",")}}:${s}`;return`${n?n+", ":""}mutationConfig?: SWRMutationConfig<${e}, AxiosResponse<${A(r.TResp)}>, ResponseError>, axiosConfig?: AxiosRequestConfig`},me=(r,e,t,s)=>{let o=Object.entries(s??{}).reduce((i,[m])=>{let u=q(m)?m:(0,g.camelCase)(m);return i+`"${m}": `+u+", "},""),n=r?`"Content-Type": "${a(e,t??"","application/json")}"`:"";return`headers: { ${o}${n}},`},W=r=>r.includes('"Accept":')?'responseType: "blob",':"";var E=class{constructor(e){this.components=e}resolvedDefinitions={};static of(e){return new E(e)}scanDefinitions=()=>{let e={},t=a(this.components,"requestBodies",{}),s=a(this.components,"schemas",{});return Object.entries(t).forEach(([o,n])=>P(n)?e[o]=c.of({results:e,schema:a(n,"content.application/json.schema"),key:o,parentKey:o}).resolve().getSchemaType():e[o]=c.of({results:e,schema:n,key:o,parentKey:o}).resolve().getSchemaType()),Object.entries(s).forEach(([o,n])=>{let i=c.of({results:e,schema:n,key:o,parentKey:n.enum?"":o}).resolve().getSchemaType();return n.enum||(e[o]=i),i}),this.resolvedDefinitions=e,this};toDeclarations=()=>Object.keys(this.resolvedDefinitions).sort().map(e=>{if(e.includes(l))return F(this.resolvedDefinitions,e);if(this.resolvedDefinitions[e]==="object"||(0,ue.isEmpty)(this.resolvedDefinitions[e]))return`export interface ${p(e)} {[key:string]:any}`;let t=j(this.resolvedDefinitions[e]);if(t)return`export interface ${p(e)} ${t}`}).filter(e=>!!e)};var T=$(require("path"),1);var b=require("moderndash");var C=class{constructor(e){this.paths=e}resolvedPaths=[];extraDefinitions={};contentType={};static of(e){return new C(e)}resolve=()=>(this.resolvedPaths=Object.entries(this.paths).reduce((e,[t,s])=>[...e,...this.resolvePath(s,t)],[]),this);toRequest=()=>{let e=this.resolvedPaths.sort(U("operationId")),t=[],s=e.map(i=>{let m=a(i,"THeader"),u=a(i.cookieParams,"[0]"),y=a(i,"requestBody"),Re=(0,b.camelCase)(p(y||u)),k=this.toHookParams(a(i,"queryParams")),v=me(!(0,b.isEmpty)(Re),this.contentType,i.operationId,m),[I,Se]=ie(i.TReqBody,i.TReqQuery,i.operationId);return t.push([I,Se]),i.method==="get"?`export const ${M(i.operationId)} = (${ae(i)}) => 
        ${oe(i.TResp)}({
        url: \`${i.url}\`,
        method: "${i.method}",${v}${W(v)}
        ${k?`params: ${k},`:""}...axiosConfig}, SWRConfig);`:`export const ${M(i.operationId)} = (${ce(i,I)}) => 
        ${ne(i.TResp,I)}({
        url: \`${i.url}\`,
        method: "${i.method}",${v}${W(v)}
        mutationConfig,
        axiosConfig});`}),o=Object.keys(this.extraDefinitions).map(i=>F(this.extraDefinitions,i)),n=t.map(([i,m])=>{if(i)return Object.keys(m).forEach(u=>{(0,b.isEmpty)(m[u])&&delete m[u]}),`export interface ${i} ${re(m)}`}).filter(Boolean);return[...s,...n,...o]};toHookParams=(e=[])=>(0,b.isEmpty)(e)?void 0:`{
    ${e.join(`,
`)}
    }`;resolvePath(e,t){let s=H(e,Q);return Object.keys(s).map(o=>({url:this.getRequestURL(t),method:o,...this.resolveOperation(s[o])}))}getRequestURL=e=>e.split(_).map(t=>this.isPathParam(t)?`$${t}`:t).join(_);isPathParam=e=>e.startsWith("{");resolveOperation=e=>{e.operationId||Z(h.MISSING_OPERATION_ID);let t=this.pickParams(e.parameters),s=t("header"),o={pathParams:t("path"),queryParams:t("query"),cookieParams:t("cookie")};return{operationId:e.operationId,TResp:this.getResponseTypes(e.responses),TReqQuery:this.getQueryParamsTypes(o.queryParams),TReqPath:this.getPathParamsTypes(o.pathParams),TReqCookie:this.getCookieParamsTypes(o.cookieParams),TReqBody:this.getRequestBodyTypes(e.operationId,a(e,"requestBody")),THeader:this.getPathParamsTypes(s),...this.getParamsNames(o),...this.getRequestBodyName(a(e,"requestBody"),e.operationId)}};getParamsNames=e=>{let t=s=>(0,b.isEmpty)(s)?[]:s?.map(o=>o.name);return{pathParams:t(e.pathParams),queryParams:t(e.queryParams),cookieParams:t(e.cookieParams)}};getPathParamsTypes=e=>e?.reduce((t,s)=>{let o=a(s,"schema");return K(o)?{...t,[`${s.name}${s.required?"":"?"}`]:o.type==="integer"?"number":o.type}:{...t}},{})??{};getQueryParamsTypes=e=>e?.reduce((t,s)=>({...t,[`${s.name}${s.required?"":"?"}`]:c.of({results:this.extraDefinitions,schema:s.schema,key:s.name,parentKey:s.name}).resolve().getSchemaType()}),{})??{};getCookieParamsTypes=e=>e?.reduce((t,s)=>({...t,[`${s.name}${s.required?"":"?"}`]:c.of({results:this.extraDefinitions,schema:s.schema,key:s.name,parentKey:s.name}).resolve().getSchemaType()}),{})??{};getResponseTypes=e=>c.of({results:this.extraDefinitions,schema:a(e,"200.content.application/json.schema")||a(e,"200.content.*/*.schema")||a(e,"201.content.application/json.schema")||a(e,"201.content.*/*.schema")||a(e,"default.content.application/json.schema")||a(e,"default.content.application/json; charset=UTF-8.schema")}).resolve().getSchemaType();pickParams=e=>t=>e?.filter(s=>s.in===t);getContentType(e,t){t&&Object.assign(this.contentType,{[t]:e})}getRequestBodyTypes(e,t){if(P(t)){let s=a(t,"content",{});return Object.entries(s).reduce((o,[n,i])=>(this.getContentType(n,e),{...o,[`${e}Request`]:c.of({results:this.extraDefinitions,schema:i.schema,key:`${e}Request`,parentKey:`${e}Request`}).resolve().getSchemaType()}),{})}return{[`${e}Request`]:c.of({results:this.extraDefinitions,schema:t,key:`${e}Request`,parentKey:`${e}Request`}).resolve().getSchemaType()}}getRequestBodyName(e,t){if(e)return{requestBody:`${t}Request`}}};var ye=$(require("axios"),1);var w=require("commander");var pe=`// you can use this file as your request handler directly,
// or you can use your own request handler file, just need to align hook name and interface
import useSWR, { SWRResponse } from "swr";
import { SWRConfiguration } from "swr/_internal";
import { AxiosError, AxiosRequestConfig, AxiosResponse } from "axios";
import { client } from "./client";

export interface Return<Data, Error>
  extends Pick<SWRResponse<AxiosResponse<Data>, AxiosError<Error>>, "isValidating" | "error" | "mutate" | "isLoading"> {
  data: Data | undefined;
  response: AxiosResponse<Data> | undefined;
}

export interface SWRConfig<Data = unknown, Error = unknown>
  extends Omit<SWRConfiguration<AxiosResponse<Data>, AxiosError<Error>>, "onSuccess"> {
  onSuccess?: (response: AxiosResponse<Data>, key: string) => void;
  shouldFetch?: boolean;
}

export const generateSwrConfigWithShouldFetchProperty = <Data, Error>(
  SWRConfig?: SWRConfig<Data, Error>,
): SWRConfig<Data, Error> =>
  SWRConfig
    ? !SWRConfig.shouldFetch
      ? SWRConfig
      : {
          ...SWRConfig,
          shouldFetch: true,
        }
    : { shouldFetch: true };

export const useGetRequest = <Data = unknown, Error = unknown>(
  axiosConfig: AxiosRequestConfig,
  SWRConfig?: SWRConfig<Data, Error>,
): Return<Data, Error> => {
  const swrConfig = generateSwrConfigWithShouldFetchProperty(SWRConfig);
  const shouldFetch = swrConfig.shouldFetch;
  delete swrConfig.shouldFetch;

  const {
    data: response,
    error,
    isValidating,
    mutate,
    isLoading,
  } = useSWR<AxiosResponse<Data>, AxiosError<Error>>(
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    () => (shouldFetch ? axiosConfig.url! : null),
    () => client(axiosConfig),
    swrConfig,
  );
  return { data: response && response.data, response, error, isValidating, isLoading, mutate };
};`;var le=`import useSWRMutation, { SWRMutationConfiguration } from "swr/mutation";
import { AxiosError, AxiosRequestConfig, AxiosResponse, RawAxiosRequestHeaders } from "axios";
import { client } from "src/request/client";

export type SWRMutationConfig<Request = any, Response = any, Error = any> = SWRMutationConfiguration<
  AxiosResponse<Response>,
  AxiosError<Error>,
  Request,
  string
>;

export const useMutationRequest = <
  Request extends { body?: any; query?: any } | undefined,
  Response = any,
  Error = any,
>({
  url,
  method,
  headers,
  mutationConfig,
  axiosConfig,
}: {
  url: string;
  method: string;
  headers: RawAxiosRequestHeaders;
  mutationConfig?: SWRMutationConfiguration<AxiosResponse<Response>, AxiosError<Error>, Request, string>;
  axiosConfig?: AxiosRequestConfig;
}) => {
  const { trigger, data, isMutating, error, reset } = useSWRMutation<
    AxiosResponse<Response>,
    AxiosError<Error>,
    // assume all key is url, so it will be string type
    string,
    Request
  >(
    url,
    (url: string, options: { arg: Request }) =>
      client.request({ url, method, headers, data: options.arg?.body, params: options.arg?.query, ...axiosConfig }),
    mutationConfig,
  );

  return { trigger, data, isMutating, error, reset };
};`;var ge=`import axios, { AxiosInstance } from "axios";

export const API_DEFAULT_TIMEOUT = 30 * 1000;

export const client: AxiosInstance = axios.create({
  baseURL: "/api",
  timeout: API_DEFAULT_TIMEOUT,
});`;w.program.option("-a, --authorization <value>","authorization header value").parse(process.argv);var fe=T.default.resolve("ts-codegen.config.json"),Ee=async()=>f.default.existsSync(fe)?await import(fe,{assert:{type:"json"}}).then(r=>r.default):{output:".output",fileHeaders:[],clients:[]},de=(r,e,t,s)=>{if(typeof r=="string")throw Error(S.INVALID_JSON_FILE_ERROR);let o=(t?Y(s):"")+[...C.of(r.paths).resolve().toRequest(),...E.of(r.components).scanDefinitions().toDeclarations()].join(`

`);e.write(x(o),"utf-8")},Ce=(r=[],e,t)=>{r.map((s,o)=>{if(!s.endsWith("json")&&!s.endsWith("yml")&&!s.endsWith("yaml")){O(S.INVALID_FILE_FORMAT);return}console.log(h.READING_FROM_LOCAL(o));let n=f.default.readFileSync(s,"utf8"),i=s.endsWith("json")?se(n):he.load(n);i&&(console.log(h.GENERATING),de(i,e,t,o),N(h.LOCAL_SUCCESSFUL(o)))})},$e=(r=[],e,t,s,o)=>{if(r){let n=w.program.opts(),i=ye.default.create({timeout:s||10*1e3,headers:n.authorization?{Authorization:n.authorization}:void 0});r.map((m,u)=>{console.log(h.GETTING_FROM_REMOTE(u)),i.get(m).then(y=>{console.log(h.GENERATING),de(y.data,e,t,u+(o?.length??0)),N(h.REMOTE_SUCCESSFUL(u))}).catch(y=>{O(`${y.code}: ${S.FETCH_CLIENT_FAILED_ERROR}`)})})}},Ae=(r,e="request",t)=>{f.default.existsSync(r)||f.default.mkdirSync(r);let s=T.default.resolve(r,`./${e}.ts`);f.default.existsSync(T.default.resolve(r,`./${e||"request"}.ts`))&&f.default.unlinkSync(s);let o=f.default.createWriteStream(s);return o.on("error",n=>{O(n.message)}),o.on("finish",()=>{N(h.SUCCESSFUL)}),o.write(x((t?t.join(`
`):"")+`

`+X),"utf-8"),{requestFileWriteStream:o}};Ee().then(({output:r=".output",fileHeaders:e,timeout:t,data:s,clients:o,fileName:n,needRequestHook:i,needClient:m})=>{if(!s&&!o){O(S.NO_CLIENTS_OR_DATA);return}let u=(s?.length??0)+(o?.length??0)>1,{requestFileWriteStream:y}=Ae(r,n,e);Ce(s,y,u),$e(o,y,u,t,s),y.end(),i&&(f.default.writeFileSync(T.default.resolve(r,"./useGetRequest.ts"),x(pe),"utf-8"),f.default.writeFileSync(T.default.resolve(r,"./useMutationRequest.ts"),x(le),"utf-8")),m&&f.default.writeFileSync(T.default.resolve(r,"./client.ts"),x(ge),"utf-8")});
